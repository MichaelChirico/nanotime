// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// nanoival_intersect_idx_time_interval_impl
Rcpp::List nanoival_intersect_idx_time_interval_impl(const Rcpp::NumericVector nv1, const Rcpp::ComplexVector nv2);
RcppExport SEXP _nanotime_nanoival_intersect_idx_time_interval_impl(SEXP nv1SEXP, SEXP nv2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type nv1(nv1SEXP);
    Rcpp::traits::input_parameter< const Rcpp::ComplexVector >::type nv2(nv2SEXP);
    rcpp_result_gen = Rcpp::wrap(nanoival_intersect_idx_time_interval_impl(nv1, nv2));
    return rcpp_result_gen;
END_RCPP
}
// nanoival_intersect_time_interval_impl
Rcpp::S4 nanoival_intersect_time_interval_impl(const Rcpp::NumericVector nv1, const Rcpp::ComplexVector nv2);
RcppExport SEXP _nanotime_nanoival_intersect_time_interval_impl(SEXP nv1SEXP, SEXP nv2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type nv1(nv1SEXP);
    Rcpp::traits::input_parameter< const Rcpp::ComplexVector >::type nv2(nv2SEXP);
    rcpp_result_gen = Rcpp::wrap(nanoival_intersect_time_interval_impl(nv1, nv2));
    return rcpp_result_gen;
END_RCPP
}
// nanoival_setdiff_time_interval_impl
Rcpp::NumericVector nanoival_setdiff_time_interval_impl(const Rcpp::NumericVector nv1, const Rcpp::ComplexVector nv2);
RcppExport SEXP _nanotime_nanoival_setdiff_time_interval_impl(SEXP nv1SEXP, SEXP nv2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type nv1(nv1SEXP);
    Rcpp::traits::input_parameter< const Rcpp::ComplexVector >::type nv2(nv2SEXP);
    rcpp_result_gen = Rcpp::wrap(nanoival_setdiff_time_interval_impl(nv1, nv2));
    return rcpp_result_gen;
END_RCPP
}
// nanoival_union_impl
Rcpp::ComplexVector nanoival_union_impl(const Rcpp::ComplexVector nv1, const Rcpp::ComplexVector nv2);
RcppExport SEXP _nanotime_nanoival_union_impl(SEXP nv1SEXP, SEXP nv2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::ComplexVector >::type nv1(nv1SEXP);
    Rcpp::traits::input_parameter< const Rcpp::ComplexVector >::type nv2(nv2SEXP);
    rcpp_result_gen = Rcpp::wrap(nanoival_union_impl(nv1, nv2));
    return rcpp_result_gen;
END_RCPP
}
// nanoival_intersect_impl
Rcpp::ComplexVector nanoival_intersect_impl(const Rcpp::ComplexVector nv1, const Rcpp::ComplexVector nv2);
RcppExport SEXP _nanotime_nanoival_intersect_impl(SEXP nv1SEXP, SEXP nv2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::ComplexVector >::type nv1(nv1SEXP);
    Rcpp::traits::input_parameter< const Rcpp::ComplexVector >::type nv2(nv2SEXP);
    rcpp_result_gen = Rcpp::wrap(nanoival_intersect_impl(nv1, nv2));
    return rcpp_result_gen;
END_RCPP
}
// nanotime_wday_impl
Rcpp::IntegerVector nanotime_wday_impl(const Rcpp::NumericVector tm_v, const Rcpp::CharacterVector tz_v);
RcppExport SEXP _nanotime_nanotime_wday_impl(SEXP tm_vSEXP, SEXP tz_vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type tm_v(tm_vSEXP);
    Rcpp::traits::input_parameter< const Rcpp::CharacterVector >::type tz_v(tz_vSEXP);
    rcpp_result_gen = Rcpp::wrap(nanotime_wday_impl(tm_v, tz_v));
    return rcpp_result_gen;
END_RCPP
}
// nanotime_mday_impl
Rcpp::IntegerVector nanotime_mday_impl(const Rcpp::NumericVector tm_v, const Rcpp::CharacterVector tz_v);
RcppExport SEXP _nanotime_nanotime_mday_impl(SEXP tm_vSEXP, SEXP tz_vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type tm_v(tm_vSEXP);
    Rcpp::traits::input_parameter< const Rcpp::CharacterVector >::type tz_v(tz_vSEXP);
    rcpp_result_gen = Rcpp::wrap(nanotime_mday_impl(tm_v, tz_v));
    return rcpp_result_gen;
END_RCPP
}
// nanotime_month_impl
Rcpp::IntegerVector nanotime_month_impl(const Rcpp::NumericVector tm_v, const Rcpp::CharacterVector tz_v);
RcppExport SEXP _nanotime_nanotime_month_impl(SEXP tm_vSEXP, SEXP tz_vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type tm_v(tm_vSEXP);
    Rcpp::traits::input_parameter< const Rcpp::CharacterVector >::type tz_v(tz_vSEXP);
    rcpp_result_gen = Rcpp::wrap(nanotime_month_impl(tm_v, tz_v));
    return rcpp_result_gen;
END_RCPP
}
// nanotime_year_impl
Rcpp::IntegerVector nanotime_year_impl(const Rcpp::NumericVector tm_v, const Rcpp::CharacterVector tz_v);
RcppExport SEXP _nanotime_nanotime_year_impl(SEXP tm_vSEXP, SEXP tz_vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type tm_v(tm_vSEXP);
    Rcpp::traits::input_parameter< const Rcpp::CharacterVector >::type tz_v(tz_vSEXP);
    rcpp_result_gen = Rcpp::wrap(nanotime_year_impl(tm_v, tz_v));
    return rcpp_result_gen;
END_RCPP
}
// nanotime_make_impl
Rcpp::NumericVector nanotime_make_impl(const Rcpp::CharacterVector nt_v, const Rcpp::CharacterVector tz_v);
RcppExport SEXP _nanotime_nanotime_make_impl(SEXP nt_vSEXP, SEXP tz_vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::CharacterVector >::type nt_v(nt_vSEXP);
    Rcpp::traits::input_parameter< const Rcpp::CharacterVector >::type tz_v(tz_vSEXP);
    rcpp_result_gen = Rcpp::wrap(nanotime_make_impl(nt_v, tz_v));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _nanoival_eq(SEXP, SEXP);
RcppExport SEXP _nanoival_ge(SEXP, SEXP);
RcppExport SEXP _nanoival_get_end(SEXP);
RcppExport SEXP _nanoival_get_eopen(SEXP);
RcppExport SEXP _nanoival_get_sopen(SEXP);
RcppExport SEXP _nanoival_get_start(SEXP);
RcppExport SEXP _nanoival_gt(SEXP, SEXP);
RcppExport SEXP _nanoival_is_unsorted(SEXP, SEXP);
RcppExport SEXP _nanoival_isna(SEXP);
RcppExport SEXP _nanoival_le(SEXP, SEXP);
RcppExport SEXP _nanoival_lt(SEXP, SEXP);
RcppExport SEXP _nanoival_make(SEXP, SEXP);
RcppExport SEXP _nanoival_minus(SEXP, SEXP);
RcppExport SEXP _nanoival_ne(SEXP, SEXP);
RcppExport SEXP _nanoival_new(SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP _nanoival_plus(SEXP, SEXP);
RcppExport SEXP _nanoival_setdiff(SEXP, SEXP);
RcppExport SEXP _nanoival_setdiff_idx_time_interval(SEXP, SEXP);
RcppExport SEXP _nanoival_sort(SEXP, SEXP);
RcppExport SEXP divides_period_double(SEXP, SEXP);
RcppExport SEXP divides_period_integer64(SEXP, SEXP);
RcppExport SEXP duration_from_string(SEXP);
RcppExport SEXP duration_is_na(SEXP);
RcppExport SEXP duration_to_string(SEXP);
RcppExport SEXP eq_period_period(SEXP, SEXP);
RcppExport SEXP make_duration(SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP minus_integer64_period(SEXP, SEXP);
RcppExport SEXP minus_nanoival_period(SEXP, SEXP, SEXP);
RcppExport SEXP minus_nanotime_period(SEXP, SEXP, SEXP);
RcppExport SEXP minus_period(SEXP);
RcppExport SEXP minus_period_integer64(SEXP, SEXP);
RcppExport SEXP minus_period_period(SEXP, SEXP);
RcppExport SEXP multiplies_period_double(SEXP, SEXP);
RcppExport SEXP multiplies_period_integer64(SEXP, SEXP);
RcppExport SEXP ne_period_period(SEXP, SEXP);
RcppExport SEXP period_day(SEXP);
RcppExport SEXP period_duration(SEXP);
RcppExport SEXP period_from_double(SEXP);
RcppExport SEXP period_from_integer(SEXP);
RcppExport SEXP period_from_integer64(SEXP);
RcppExport SEXP period_from_string(SEXP);
RcppExport SEXP period_isna(SEXP);
RcppExport SEXP period_month(SEXP);
RcppExport SEXP period_seq_from_length(SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP period_seq_from_to(SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP period_to_string(SEXP);
RcppExport SEXP plus_nanoival_period(SEXP, SEXP, SEXP);
RcppExport SEXP plus_nanotime_period(SEXP, SEXP, SEXP);
RcppExport SEXP plus_period_integer64(SEXP, SEXP);
RcppExport SEXP plus_period_period(SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_nanotime_nanoival_intersect_idx_time_interval_impl", (DL_FUNC) &_nanotime_nanoival_intersect_idx_time_interval_impl, 2},
    {"_nanotime_nanoival_intersect_time_interval_impl", (DL_FUNC) &_nanotime_nanoival_intersect_time_interval_impl, 2},
    {"_nanotime_nanoival_setdiff_time_interval_impl", (DL_FUNC) &_nanotime_nanoival_setdiff_time_interval_impl, 2},
    {"_nanotime_nanoival_union_impl", (DL_FUNC) &_nanotime_nanoival_union_impl, 2},
    {"_nanotime_nanoival_intersect_impl", (DL_FUNC) &_nanotime_nanoival_intersect_impl, 2},
    {"_nanotime_nanotime_wday_impl", (DL_FUNC) &_nanotime_nanotime_wday_impl, 2},
    {"_nanotime_nanotime_mday_impl", (DL_FUNC) &_nanotime_nanotime_mday_impl, 2},
    {"_nanotime_nanotime_month_impl", (DL_FUNC) &_nanotime_nanotime_month_impl, 2},
    {"_nanotime_nanotime_year_impl", (DL_FUNC) &_nanotime_nanotime_year_impl, 2},
    {"_nanotime_nanotime_make_impl", (DL_FUNC) &_nanotime_nanotime_make_impl, 2},
    {"_nanoival_eq",                        (DL_FUNC) &_nanoival_eq,                        2},
    {"_nanoival_ge",                        (DL_FUNC) &_nanoival_ge,                        2},
    {"_nanoival_get_end",                   (DL_FUNC) &_nanoival_get_end,                   1},
    {"_nanoival_get_eopen",                 (DL_FUNC) &_nanoival_get_eopen,                 1},
    {"_nanoival_get_sopen",                 (DL_FUNC) &_nanoival_get_sopen,                 1},
    {"_nanoival_get_start",                 (DL_FUNC) &_nanoival_get_start,                 1},
    {"_nanoival_gt",                        (DL_FUNC) &_nanoival_gt,                        2},
    {"_nanoival_is_unsorted",               (DL_FUNC) &_nanoival_is_unsorted,               2},
    {"_nanoival_isna",                      (DL_FUNC) &_nanoival_isna,                      1},
    {"_nanoival_le",                        (DL_FUNC) &_nanoival_le,                        2},
    {"_nanoival_lt",                        (DL_FUNC) &_nanoival_lt,                        2},
    {"_nanoival_make",                      (DL_FUNC) &_nanoival_make,                      2},
    {"_nanoival_minus",                     (DL_FUNC) &_nanoival_minus,                     2},
    {"_nanoival_ne",                        (DL_FUNC) &_nanoival_ne,                        2},
    {"_nanoival_new",                       (DL_FUNC) &_nanoival_new,                       4},
    {"_nanoival_plus",                      (DL_FUNC) &_nanoival_plus,                      2},
    {"_nanoival_setdiff",                   (DL_FUNC) &_nanoival_setdiff,                   2},
    {"_nanoival_setdiff_idx_time_interval", (DL_FUNC) &_nanoival_setdiff_idx_time_interval, 2},
    {"_nanoival_sort",                      (DL_FUNC) &_nanoival_sort,                      2},
    {"divides_period_double",               (DL_FUNC) &divides_period_double,               2},
    {"divides_period_integer64",            (DL_FUNC) &divides_period_integer64,            2},
    {"duration_from_string",                (DL_FUNC) &duration_from_string,                1},
    {"duration_is_na",                      (DL_FUNC) &duration_is_na,                      1},
    {"duration_to_string",                  (DL_FUNC) &duration_to_string,                  1},
    {"eq_period_period",                    (DL_FUNC) &eq_period_period,                    2},
    {"make_duration",                       (DL_FUNC) &make_duration,                       4},
    {"minus_integer64_period",              (DL_FUNC) &minus_integer64_period,              2},
    {"minus_nanoival_period",               (DL_FUNC) &minus_nanoival_period,               3},
    {"minus_nanotime_period",               (DL_FUNC) &minus_nanotime_period,               3},
    {"minus_period",                        (DL_FUNC) &minus_period,                        1},
    {"minus_period_integer64",              (DL_FUNC) &minus_period_integer64,              2},
    {"minus_period_period",                 (DL_FUNC) &minus_period_period,                 2},
    {"multiplies_period_double",            (DL_FUNC) &multiplies_period_double,            2},
    {"multiplies_period_integer64",         (DL_FUNC) &multiplies_period_integer64,         2},
    {"ne_period_period",                    (DL_FUNC) &ne_period_period,                    2},
    {"period_day",                          (DL_FUNC) &period_day,                          1},
    {"period_duration",                     (DL_FUNC) &period_duration,                     1},
    {"period_from_double",                  (DL_FUNC) &period_from_double,                  1},
    {"period_from_integer",                 (DL_FUNC) &period_from_integer,                 1},
    {"period_from_integer64",               (DL_FUNC) &period_from_integer64,               1},
    {"period_from_string",                  (DL_FUNC) &period_from_string,                  1},
    {"period_isna",                         (DL_FUNC) &period_isna,                         1},
    {"period_month",                        (DL_FUNC) &period_month,                        1},
    {"period_seq_from_length",              (DL_FUNC) &period_seq_from_length,              4},
    {"period_seq_from_to",                  (DL_FUNC) &period_seq_from_to,                  4},
    {"period_to_string",                    (DL_FUNC) &period_to_string,                    1},
    {"plus_nanoival_period",                (DL_FUNC) &plus_nanoival_period,                3},
    {"plus_nanotime_period",                (DL_FUNC) &plus_nanotime_period,                3},
    {"plus_period_integer64",               (DL_FUNC) &plus_period_integer64,               2},
    {"plus_period_period",                  (DL_FUNC) &plus_period_period,                  2},
    {NULL, NULL, 0}
};

RcppExport void R_init_nanotime(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
